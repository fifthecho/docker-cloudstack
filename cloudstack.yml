---
- hosts: all
  vars:
    ansible_python_interpreter: "/usr/bin/env python"
    host_key_checking: False
    root_user_password: cloudstack
  pre_tasks:
  - name: ensure sshpass is installed on Debian/Ubuntu
    apt: name=sshpass state=latest
    when: ansible_os_family == "Debian"
  tasks:
  - name: fetch build code
    git: repo=https://git.dpcloud.com/jmoody/docker-cloudstack-management.git dest=/tmp/build
  - name: ensure py-docker is installed
    pip: name=docker-py
  - name: build the database container
    docker_image: path=/tmp/build/database-server-centos name=apache-cloudstack-database state=present
  - name: run mysql servers
    docker: image=apache-cloudstack-database name=acs-db state=present ports=3306:3306 publish_all_ports=true
  - name: fetch mysql ssh port
    shell: docker port acs-db 22 | cut -d ":" -f 2
    register: mysql_ssh_port
  - debug: var=mysql_ssh_port.stdout
  - name: add mysql server to inventory
    add_host: name=acs-db groups=database ansible_ssh_host=localhost ansible_ssh_port={{ mysql_ssh_port.stdout }} ansible_ssh_pass=cloudstack
  - name: wait for container to start
    command: /bin/sleep 30
- hosts: database
  vars:
    mysql_root_password: cloudstack

  tasks:
    - name: update mysql root password for all root accounts
      mysql_user: name=root host={{ item }} password={{ mysql_root_password }}
      with_items:
        - 127.0.0.1
        - ::1
        - \%
        - localhost

    - name: setup my.cnf to allow root authentication for mysql
      template: src=database-server-centos/build/.my.cnf dest=/root/.my.cnf

    - name: ensure anonymous users are not in the database
      mysql_user: name='' host={{ item }} state=absent
      with_items:
        - $inventory_hostname
        - $ansible_hostname
        - localhost

    - name: remove the test database
      mysql_db: name=test state=absent
      tags: config

