---
- hosts: localhost
  connection: local
  vars:
    cloudstack_version: 4.3
    primary_path: /opt/storage/primary
    secondary_path: /opt/storage/secondary
    cloud_user_password: cloudstack
    mysql_root_password: cloudstack
  tasks:
    - name: ensure that primary storage path exists
      file: state=directory path={{ primary_path }}
      sudo: true
    - name: ensure that secondary storage path exists
      file: state=directory path={{ secondary_path }}
      sudo: true

    - name: ensure that nfs is installed (Debian)
      apt: name=nfs-kernel-server state=latest
      when: ansible_os_family == "Debian"
      sudo: true
    - name: ensure that nfs is installed (RedHat)
      yum: name={{ item }} state=latest
      with_items:
        - libselinux-python
        - nfs-utils
      when: ansible_os_family == "RedHat"
      sudo: true
    - name: ensure that nfs is installed (Suse)
      zypper: name={{ item }} state=latest
      with_items:
        - nfs-kernel-server
        - nfs-utils
      when: ansible_os_family == "Suse"
      sudo: true
    - name: ensure that nfs is installed (Arch)
      pacman: name=nfs-utils state=present
      when: ansible_os_family == "Arch"
      sudo: true

    - name: install docker (Debian) (1/2)
      shell: sh -c "echo deb https://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list"
      when: ansible_os_family == "Debian"
      sudo: true
    - name: install docker (Debian) (2/2)
      apt: name=lxc-docker state=latest update_cache=true force=yes
      when: ansible_os_family == "Debian"
      sudo: true
    - name: install docker (RedHat) (1/2)
      yum: name=http://mirror.pnl.gov/epel/6/x86_64/epel-release-6-8.noarch.rpm state=present
      when: ansible_os_family == "RedHat"
      sudo: true
    - name: install docker (RedHat) (2/2)
      yum: name=docker-io state=present
      when: ansible_os_family == "RedHat"
      sudo: true
    - name: install docker (Suse) (1/2)
      zypper_repository: repo=http://download.opensuse.org/repositories/Virtualization/openSUSE_13.1/ name=Virtualization state=present
      when: ansible_os_family == "Suse"
      sudo: true
    - name: install docker (Suse) (2/2)
      zypper: name=docker state=latest
      when: ansible_os_family == "Suse"
      sudo: true
    - name: install docker (Arch)
      pacman: name=docker state=present
      when: ansible_os_family == "Arch"
      sudo: true

    - name: ensure docker is enabled and running
      service: name=docker state=started enabled=yes

    - name: ensure that primary storage is in /etc/exports
      lineinfile: "dest=/etc/exports state=present regexp='{{ primary_path }}' line='{{ primary_path }} *(rw,no_root_squash,no_subtree_check)'"
      sudo: true
    - name: ensure that primary storage is in /etc/exports
      lineinfile: "dest=/etc/exports state=present regexp='{{ secondary_path }}' line='{{ secondary_path }} *(rw,no_root_squash,no_subtree_check)'"
      sudo: true

    - name: restart NFS (Debian)
      service: name=nfs-kernel-server state=restarted enabled=yes
      when: ansible_os_family == "Debian"
      sudo: true
    - name: restart NFS (RedHat)
      service: name={{ item }} state=restarted enabled=yes
      with_items:
        - rpcbind
        - nfs
      when: ansible_os_family == "RedHat"
      sudo: true
    - name: restart NFS (Suse)
      action: service name={{ item }} state=restarted enabled=yes
      with_items:
        - rpcbind
        - nfsserver
      when: ansible_os_family == "Suse"
      sudo: true
    - name: restart NFS (Arch)
      action: service name=nfs-server state=restarted enabled=yes
      when: ansible_os_family == "Arch"
      sudo: true

    - name: ensure that docker-py is installed
      sudo: True
      pip: name=docker-py state=present
    - name: create new dockerfile for container
      template: src=build/Dockerfile.j2 dest=./Dockerfile
    - name: build cloudstack docker container
      docker_image: name=cloudstack tag={{ cloudstack_version }} path=.
    - name: start cloudstack docker container
      docker: 
        ports=8080:8080,8250:8250,3922:3922,9090:9090,7080:7080
        publish_all_ports=True
        name=cloudstack
        image=cloudstack:{{ cloudstack_version }}
        volumes={{ secondary_path }}:/opt/storage/secondary,/var/lib/mysql
